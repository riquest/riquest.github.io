{"version":3,"file":"component---src-templates-news-list-tsx-8417cb55460f60e38f8f.js","mappings":"8GAYA,KAAeA,EAAAA,EAAAA,KAJD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UACrB,OAAO,uBAAKA,UAAWA,GAAYD,MAGrC,uW,oGCVe,SAAS,EAAT,GAA0B,IAAdE,EAAa,EAAbA,KACnBC,EAAI,IAAIC,KAAKF,GAejBG,EAAOF,EAAEG,UACTC,EAAQJ,EAAEK,WACVC,EAAON,EAAEO,cACX,OACE,4BACGL,EADH,IAlBS,CACP,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAOeE,GADjB,IAC0BE,G,cChBxBE,EAAW,SAACC,GAChB,OAA0BC,EAAAA,EAAAA,UAAS,IAA5BC,EAAP,KAAcC,EAAd,KACMC,GAAgBC,EAAAA,EAAAA,QAA2B,MAUjD,OARAC,EAAAA,EAAAA,kBAAgB,WACd,GAAIF,GAAiBA,EAAcG,QAAS,CAC1CJ,EAASK,OAAOC,iBAAiBL,EAAcG,QAAS,MAAMG,iBAAiB,UAC/E,IAAMC,EAAWP,EAAcG,QAAQK,cAAc,QACrDD,GAAYA,EAASE,aAAa,OAAQX,MAE3C,CAACA,IAGF,uBAAKb,UAAU,mBACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,SAEb,gBAAC,EAAAyB,KAAD,CACEC,GAAIf,EAAMV,KAAK0B,KAAKC,YAAYC,IAChCC,MAAOnB,EAAMV,KAAK0B,KAAKC,YAAYE,MACnC,aAAYnB,EAAMV,KAAK0B,KAAKC,YAAYE,MACxC9B,UAAU,eACV+B,MAAO,CAAEC,QAAS,IAEjBrB,EAAMV,KAAK0B,KAAKC,YAAYE,QAGjC,uBAAK9B,UAAU,WACb,sBAAIA,UAAU,gBACZ,gBAAC,EAAAyB,KAAD,CAAMC,GAAIf,EAAMV,KAAK0B,KAAKC,YAAYC,IAAKC,MAAOnB,EAAMV,KAAK0B,KAAKC,YAAYE,OAC3EnB,EAAMV,KAAK0B,KAAKC,YAAYE,QAGjC,qBAAG9B,UAAU,kBAAkBW,EAAMV,KAAK0B,KAAKC,YAAYK,aAC3D,qBAAGjC,UAAU,qBAAqBkC,IAAKnB,GACrC,wBAAMf,UAAU,QACd,gBAAC,IAAD,OAEF,gBAAC,EAAD,CAAMC,KAAMU,EAAMV,KAAK0B,KAAKC,YAAYxB,YAQrC,SAAS,EAACO,GACvB,IAAMV,EAAOU,EAAMV,KAAKkC,kBAAkBC,MACpCC,EAAe,GAKrB,OAJApC,EAAKqC,SAAQ,SAAUC,GACjB5B,EAAM6B,QAAUD,EAAEZ,KAAKc,KAAO9B,EAAM6B,QACxCH,EAAMK,KAAK,gBAAChC,EAAD,CAAUiC,IAAKJ,EAAEZ,KAAKc,GAAIxC,KAAMsC,QAEtC,uBAAKvC,UAAU,OAAOqC,G,kCCpD/B,SAASO,EAAT,GAAkC,IAC1BC,EADyB,EAAb5C,KAEZ6C,GAAOC,EAAAA,EAAAA,WAEb,OAAIF,EAAMV,kBAAkBC,MAAMY,OAAS,EAEvC,2BAASP,GAAG,OAAOzC,UAAU,aAC3B,gBAACiD,EAAA,EAAD,CACElD,KAAM+C,EAAKI,cAAc,CACvBT,GAAI,aACJU,eAAgB,iBAGpB,uBAAKnD,UAAU,gBACZ8C,EAAKI,cACJ,CACET,GAAI,mBACJU,eACE,oOAEJ,CAAEC,GAAI,8BAGV,gBAAC,EAAD,CAAWnD,KAAM4C,KAId,gBAAC,WAAD,MAIX,IA4CA,EA5CqB,SAAC,GAAgC,IAA9B5C,EAA6B,EAA7BA,KAChB6C,GAAOC,EAAAA,EAAAA,WACb,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEjB,MAAOgB,EAAKI,cAAc,CAAET,GAAI,gBAAiBU,eAAgB,SACjElB,YAAaa,EAAKI,cAAc,CAAET,GAAI,sBAAuBU,eAAgB,WAE/E,gBAACP,EAAD,CAAU3C,KAAMA","sources":["webpack:///./src/components/Title.tsx","webpack:///./src/components/date.tsx","webpack:///./src/components/item-news.tsx","webpack:///./src/templates/newsList.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  text: string;\n  className?: string;\n}\n\nconst Title = ({ text, className }: Props) => {\n  return <div className={className}>{text}</div>;\n};\n\nexport default styled(Title)`\n  font-size: 4rem;\n  background: linear-gradient(45deg, var(--mainRed), var(--gradientSecondary));\n  background-clip: text;\n  -webkit-background-clip: text;\n  -moz-background-clip: text;\n  -moz-text-fill-color: transparent;\n  -webkit-text-fill-color: transparent;\n  display: inline-block;\n\n  :not(:first-child) {\n    margin-top: 2rem;\n  }\n`;\n","import React from \"react\";\n\nexport default function ({ data }: any) {\n  const d = new Date(data),\n    months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ],\n    date = d.getDate(),\n    month = d.getMonth(),\n    year = d.getFullYear();\n  return (\n    <span>\n      {date} {months[month]} {year}\n    </span>\n  );\n}\n","import React, { useState, useRef, useLayoutEffect } from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport Date from \"./date\";\nimport { Calendar } from \"./icons\";\nimport \"../style/news-list.less\";\n\nconst NewsItem = (props: any) => {\n  const [color, setColor] = useState(\"\");\n  const textSecondary = useRef<HTMLHeadingElement>(null);\n\n  useLayoutEffect(() => {\n    if (textSecondary && textSecondary.current) {\n      setColor(window.getComputedStyle(textSecondary.current, null).getPropertyValue(\"color\"));\n      const calendar = textSecondary.current.querySelector(\"path\");\n      calendar && calendar.setAttribute(\"fill\", color);\n    }\n  }, [color]);\n\n  return (\n    <div className=\"item col s12 m6\">\n      <div className=\"box\">\n        <div className=\"image\">\n          {/* <Img fluid={props.data.node.frontmatter.image.childImageSharp.fluid} /> */}\n          <Link\n            to={props.data.node.frontmatter.url}\n            title={props.data.node.frontmatter.title}\n            aria-label={props.data.node.frontmatter.title}\n            className=\"overlay-link\"\n            style={{ opacity: 0 }}\n          >\n            {props.data.node.frontmatter.title}\n          </Link>\n        </div>\n        <div className=\"content\">\n          <h3 className=\"text-primary\">\n            <Link to={props.data.node.frontmatter.url} title={props.data.node.frontmatter.title}>\n              {props.data.node.frontmatter.title}\n            </Link>\n          </h3>\n          <p className=\"text-secondarr\">{props.data.node.frontmatter.description}</p>\n          <p className=\"date text-tertiary\" ref={textSecondary}>\n            <span className=\"icon\">\n              <Calendar />\n            </span>\n            <Date data={props.data.node.frontmatter.date} />\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function (props: any) {\n  const data = props.data.allMarkdownRemark.edges;\n  const items: any[] = [];\n  data.forEach(function (e: any) {\n    if (props.remove && e.node.id === props.remove) return;\n    items.push(<NewsItem key={e.node.id} data={e} />);\n  });\n  return <div className=\"row\">{items}</div>;\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport NewsItems from \"../components/item-news\";\nimport SEO from \"../components/seo\";\nimport { useIntl } from \"gatsby-plugin-react-intl\";\nimport Title from \"../components/Title\";\n\nfunction NewsList({ data }: any) {\n  const query = data;\n  const intl = useIntl();\n\n  if (query.allMarkdownRemark.edges.length > 0) {\n    return (\n      <section id=\"blog\" className=\"container\">\n        <Title\n          text={intl.formatMessage({\n            id: \"news.title\",\n            defaultMessage: \"Actualités\",\n          })}\n        />\n        <div className=\"text-primary\">\n          {intl.formatMessage(\n            {\n              id: \"about.news.intro\",\n              defaultMessage:\n                \"Riquest et ses membres publient ici régulièrement des documents d'orientation ou des études sur les lacunes de la législation française actuelle, au moyen d'analyses juridiques comparées et d'entretiens avec des praticiens. \",\n            },\n            { br: <br /> },\n          )}\n        </div>\n        <NewsItems data={query} />\n      </section>\n    );\n  } else {\n    return <React.Fragment></React.Fragment>;\n  }\n}\n\nconst NewsListComp = ({ data }: any): JSX.Element => {\n  const intl = useIntl();\n  return (\n    <Layout>\n      <SEO\n        title={intl.formatMessage({ id: \"news.titleSeo\", defaultMessage: \"Actu\" })}\n        description={intl.formatMessage({ id: \"news.descriptionSeo\", defaultMessage: \"Actu\" })}\n      />\n      <NewsList data={data} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query blogListPage($searchPath: String) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: $searchPath } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n            date\n            url\n            # image {\n            #   publicURL\n            #   childImageSharp {\n            #     fluid(maxWidth: 1920) {\n            #       srcSet\n            #       ...GatsbyImageSharpFluid\n            #     }\n            #     id\n            #   }\n            # }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default NewsListComp;\n"],"names":["styled","text","className","data","d","Date","date","getDate","month","getMonth","year","getFullYear","NewsItem","props","useState","color","setColor","textSecondary","useRef","useLayoutEffect","current","window","getComputedStyle","getPropertyValue","calendar","querySelector","setAttribute","Link","to","node","frontmatter","url","title","style","opacity","description","ref","allMarkdownRemark","edges","items","forEach","e","remove","id","push","key","NewsList","query","intl","useIntl","length","Title","formatMessage","defaultMessage","br"],"sourceRoot":""}